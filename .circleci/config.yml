version: 2.1

# parameters:
#     USERNAME:
#         type: string
#         default: circle_build_$CIRCLE_BUILD_NUM-${CIRCLE_BRANCH}


orbs:
  sfdx: circleci/salesforce-sfdx@2.2.0
  jq: circleci/jq@2.2.0

workflows:
  version: 2.1
  basic-test:
    jobs:
      - static-analysis:
          filters:
            branches:
              only: /feature\/.*/

      # - create-push-delete
      
      # - create-push-delete:
      #     requires:
      #       - static-analysis


jobs:

  static-analysis:

    docker:
      - image: circleci/openjdk:latest
    steps:

      - run:
          name: Creating Dummy Artifacts
          command: |
            mkdir /tmp/artifacts;
          
      - checkout
      - restore_cache:
          keys: 
            - pmd-v6.36.0

      - run:
          name: Install PMD
          command: |
              if [ ! -d pmd-bin-6.36.0 ]; then
                  curl -L "https://github.com/pmd/pmd/releases/download/pmd_releases/6.36.0/pmd-bin-6.36.0.zip" -o pmd-bin-6.36.0.zip
                  unzip pmd-bin-6.36.0.zip
                  rm pmd-bin-6.36.0.zip
              fi
      - save_cache:
          key: pmd-v6.36.0
          paths: 
              - pmd-bin-6.36.0

      - run:
          name: quick diff
          command: |


            echo "1 ----"
            echo $(git diff --name-only "${CIRCLE_BRANCH}"..origin/main | paste -s -d ",")

            echo "2 ----"

            DIFFS=$(git diff --name-only "${CIRCLE_BRANCH}"..origin/main | paste -d ",")
            echo "DIFFS"
            echo $DIFFS

            echo "3 ----"
            echo $DIFFS > diff-file.csv
            echo $(cat diff-file.csv)


            echo "------"



            
      - run:
          name: Diff only PMD
          command: |

            git diff --name-only "${CIRCLE_BRANCH}"..origin/main
            echo $(git diff --name-only "${CIRCLE_BRANCH}"..origin/main)

            git diff --name-only "${CIRCLE_BRANCH}"..origin/main | paste -d "," >> diff-file.csv
            echo $(cat diff-file.csv)
            
            # git diff --name-only "${CIRCLE_BRANCH}"..origin/main | paste  >> diff-file.csv
            # echo $(cat diff-file.csv)

            # git diff --name-only origin/main.."${CIRCLE_BRANCH}" | paste -s -d "," >> diff-file.csv

            echo $(cat diff-file.csv)


      - run: 
          name: Display diff file
          command: |
            echo "diff-file.csv"
            echo $(cat diff-file.csv)
            cat diff-file.csv


      - run: 
          name: Run Static Analysis
          command: |

            echo $(cat diff-file.csv)

              # pmd-bin-6.36.0/bin/run.sh pmd -d . -R ./pmd-ruleset.xml -f summaryhtml -l apex -r /tmp/artifacts/static-analysis.html
              # pmd-bin-6.36.0/bin/run.sh pmd -filelist diff-file.csv -R ./pmd-ruleset.xml -f summaryhtml -l apex -r /tmp/artifacts/static-analysis.html

              echo ".circleci/config.yml" >> ignorelist.csv

              pmd-bin-6.36.0/bin/run.sh pmd -filelist diff-file.csv -ignorelist ignorelist.csv -R ./pmd-ruleset.xml -f summaryhtml -l apex -r /tmp/artifacts/static-analysis.html -failOnViolation false
              #pmd-bin-6.36.0/bin/run.sh pmd -filelist diff-file.csv -R ./pmd-ruleset.xml -f summaryhtml -l apex -r /tmp/artifacts/static-analysis.html -failOnViolation true
              
              echo "Show the analysis here:"
              echo $(cat /temp/artifacts/static-analysis.html)



      - store_artifacts:
          path: /tmp/artifacts
          #destination: static-analysis.html

          

  # create-push-delete:

  #   executor: sfdx/default

  #   steps:

  #     - checkout

  #     - sfdx/install

  #     - jq/install
    
  #     - sfdx/auth:
  #         defaultusername: devhub20210620@prt.com

      # - sfdx/scratch-create:
      #     scratch-alias: << pipeline.parameters.USERNAME >>
      #     scratch-config: ./config/project-scratch-def.json
 
      # - run:
      #     name: Push source
      #     command: >
      #       sfdx force:source:push -u circle_build_$CIRCLE_BUILD_NUM-${CIRCLE_BRANCH}

      # - run:
      #     name: Run tests
      #     command: >
      #       echo $(sfdx force:apex:test:run -l RunLocalTests -u circle_build_$CIRCLE_BUILD_NUM-${CIRCLE_BRANCH} -w 30 --json)
      #       echo $TEST_RESULT | jq '.result.outcome'
            
      # - sfdx/scratch-delete:
      #     scratch-alias: circle_build_$CIRCLE_BUILD_NUM-${CIRCLE_BRANCH}

